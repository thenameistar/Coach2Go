// <auto-generated />
using System;
using Coach2Go.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Coach2Go.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250721230037_AddCompletedDateToWorkoutSessions")]
    partial class AddCompletedDateToWorkoutSessions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Coach2Go.Api.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WorkoutSessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.GymEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GymName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GymEquipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentName = "Treadmill",
                            GymName = "PureGym",
                            ImageUrl = "images/treadmill.png"
                        },
                        new
                        {
                            Id = 2,
                            EquipmentName = "Cross Trainer",
                            GymName = "PureGym",
                            ImageUrl = "images/cross_trainer.png"
                        },
                        new
                        {
                            Id = 3,
                            EquipmentName = "Stair Climber",
                            GymName = "PureGym",
                            ImageUrl = "images/stair_climber.png"
                        },
                        new
                        {
                            Id = 4,
                            EquipmentName = "Stepper",
                            GymName = "PureGym",
                            ImageUrl = "images/stepper.png"
                        },
                        new
                        {
                            Id = 5,
                            EquipmentName = "Exercise Bike",
                            GymName = "PureGym",
                            ImageUrl = "images/exercise_bike.png"
                        },
                        new
                        {
                            Id = 6,
                            EquipmentName = "Rowing Machine",
                            GymName = "PureGym",
                            ImageUrl = "images/rowing_machine.png"
                        },
                        new
                        {
                            Id = 7,
                            EquipmentName = "Dumbbells",
                            GymName = "PureGym",
                            ImageUrl = "images/dumbbells.png"
                        },
                        new
                        {
                            Id = 8,
                            EquipmentName = "Weight Bench",
                            GymName = "PureGym",
                            ImageUrl = "images/weight_bench.png"
                        },
                        new
                        {
                            Id = 9,
                            EquipmentName = "Squat Rack",
                            GymName = "PureGym",
                            ImageUrl = "images/squat_rack.png"
                        },
                        new
                        {
                            Id = 10,
                            EquipmentName = "Plate-Loaded Machine",
                            GymName = "PureGym",
                            ImageUrl = "images/plate_loaded.png"
                        },
                        new
                        {
                            Id = 11,
                            EquipmentName = "Chest Press",
                            GymName = "PureGym",
                            ImageUrl = "images/chest_press.png"
                        },
                        new
                        {
                            Id = 12,
                            EquipmentName = "Shoulder Press",
                            GymName = "PureGym",
                            ImageUrl = "images/shoulder_press.png"
                        },
                        new
                        {
                            Id = 13,
                            EquipmentName = "Bicep Curl Machine",
                            GymName = "PureGym",
                            ImageUrl = "images/bicep_curl.png"
                        },
                        new
                        {
                            Id = 14,
                            EquipmentName = "Lateral Pulldown Machine",
                            GymName = "PureGym",
                            ImageUrl = "images/lat_pulldown.png"
                        },
                        new
                        {
                            Id = 15,
                            EquipmentName = "Leg Press",
                            GymName = "PureGym",
                            ImageUrl = "images/leg_press.png"
                        },
                        new
                        {
                            Id = 16,
                            EquipmentName = "Ab Machine",
                            GymName = "PureGym",
                            ImageUrl = "images/ab_machine.png"
                        },
                        new
                        {
                            Id = 17,
                            EquipmentName = "Multi-Gym Station",
                            GymName = "PureGym",
                            ImageUrl = "images/multigym.png"
                        },
                        new
                        {
                            Id = 18,
                            EquipmentName = "Hip Abductor",
                            GymName = "PureGym",
                            ImageUrl = "images/hip_abductor.png"
                        },
                        new
                        {
                            Id = 19,
                            EquipmentName = "Kettlebell",
                            GymName = "PureGym",
                            ImageUrl = "images/kettlebell.png"
                        },
                        new
                        {
                            Id = 20,
                            EquipmentName = "Medicine Ball",
                            GymName = "PureGym",
                            ImageUrl = "images/medicine_ball.png"
                        },
                        new
                        {
                            Id = 21,
                            EquipmentName = "Battle Ropes",
                            GymName = "PureGym",
                            ImageUrl = "images/battle_ropes.png"
                        },
                        new
                        {
                            Id = 22,
                            EquipmentName = "TRX",
                            GymName = "PureGym",
                            ImageUrl = "images/trx.png"
                        });
                });

            modelBuilder.Entity("Coach2Go.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoogleId")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WorkoutPlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Intensity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.WorkoutSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Equipment")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Level")
                        .HasColumnType("text");

                    b.Property<string>("TargetMuscles")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Week")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.Exercise", b =>
                {
                    b.HasOne("Coach2Go.Api.Models.WorkoutSession", "WorkoutSession")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.User", b =>
                {
                    b.HasOne("Coach2Go.Api.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany()
                        .HasForeignKey("WorkoutPlanId");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.WorkoutPlan", b =>
                {
                    b.HasOne("Coach2Go.Api.Models.User", "User")
                        .WithMany("Plans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.WorkoutSession", b =>
                {
                    b.HasOne("Coach2Go.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Coach2Go.Api.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("Sessions")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.User", b =>
                {
                    b.Navigation("Plans");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.WorkoutPlan", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Coach2Go.Api.Models.WorkoutSession", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
