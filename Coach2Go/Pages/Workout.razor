@page "/workout"
@using MudBlazor
@using Coach2Go.Shared.Dtos
@inject NavigationManager NavigationManager
@inject HttpClient Http

<MudContainer MaxWidth="MaxWidth.Large" Class="px-4 py-2 text-white">

    <!-- Top Bar -->
    <MudGrid AlignItems="Center" Justify="Justify.SpaceBetween">
        <MudItem>
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Primary" OnClick="@(() => NavigationManager.NavigateTo("/dashboard"))" />
        </MudItem>
        <MudItem>
            <MudIconButton Icon="@Icons.Material.Filled.Bookmark" Color="Color.Primary" />
        </MudItem>
    </MudGrid>

    <!-- AI Toggle -->
    <MudSwitch T="bool" @bind_Checked="_useAI" Color="Color.Secondary" Label="Enable AI Recommendations" Class="my-2" />
    
    <!-- Filters -->
    <MudPaper Class="d-flex justify-between mt-2 px-2 py-1 rounded" Elevation="2" Style="background: linear-gradient(90deg, #9C27B0, #E040FB);">
        <MudSelect T="string" @bind-Value="selectedType" Label="Type" Dense Class="mx-1 rounded-pill">
            <MudSelectItem Value="@("Strength")">Strength</MudSelectItem>
            <MudSelectItem Value="@("Mobility")">Mobility</MudSelectItem>
            <MudSelectItem Value="@("HIIT")">HIIT</MudSelectItem>
        </MudSelect>
    
        <MudSelect T="string" @bind-Value="selectedTime" Label="Time" Dense Class="mx-1 rounded-pill">
            <MudSelectItem Value="@("15")">15</MudSelectItem>
            <MudSelectItem Value="@("30")">30</MudSelectItem>
            <MudSelectItem Value="@("45")">45</MudSelectItem>
        </MudSelect>
    
    <MudSelect T="string" @bind-Value="selectedGoal" Label="Goal" Dense Class="mx-1 rounded-pill">
        <MudSelectItem Value="@("LoseWeight")">Lose Weight</MudSelectItem>
        <MudSelectItem Value="@("BuildMuscle")">Build Muscle</MudSelectItem>
        <MudSelectItem Value="@("GeneralFitness")">General Fitness</MudSelectItem>
    </MudSelect>
</MudPaper>

    <MudButton OnClick="ApplyFilters" Variant="Variant.Filled" Color="Color.Primary" Class="mt-3 w-100">Find Workouts</MudButton>

    @if (filteredWorkouts.Count > 0)
    {
        <h4 class="mt-4">Filtered Results</h4>
        <MudGrid>
            @foreach (var workout in filteredWorkouts)
            {
                <MudItem Xs="6" Sm="4">
                    <MudPaper Class="p-2 text-center" Elevation="3">
                        <MudImage Src="@workout.ImagePath" Style="border-radius: 12px; width: 100%; height: 100px; object-fit: cover;" />
                        <MudText Typo="Typo.subtitle2">@workout.Title</MudText>
                        <MudText Typo="Typo.caption">@workout.Duration min Â· @workout.Level</MudText>
                        @if (workout.IsAiGenerated)
                        {
                           <MudChip T="string" Color="Color.Info" Class="mt-1">AI</MudChip>
                        }
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
    else if (searched)
    {
        <MudText Class="mt-4">No matching workouts found.</MudText>
    }

</MudContainer>

@code {
    private List<WorkoutSessionDto> filteredWorkouts = new();
    private bool _useAI = false;
    private bool searched = false;

    private string? selectedType;
    private string? selectedTime;
    private string? selectedGoal;

    private async Task ApplyFilters()
    {
        searched = true;

        var prefs = new WorkoutPreferencesDto
        {
            Type = selectedType ?? "",
            Time = int.TryParse(selectedTime, out int t) ? t : 0,
            Goal = selectedGoal ?? ""
        };

        if (_useAI)
        {
            var res = await Http.PostAsJsonAsync("api/workout/generate-ai", prefs);
            filteredWorkouts = await res.Content.ReadFromJsonAsync<List<WorkoutSessionDto>>() ?? new();
        }
        else
        {
            var res = await Http.PostAsJsonAsync("api/workout/static-suggestions", prefs);
            filteredWorkouts = await res.Content.ReadFromJsonAsync<List<WorkoutSessionDto>>() ?? new();
        }
    }
}